<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nik.mapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.nik.po.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="discount" property="discount" jdbcType="DOUBLE" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="expiry_date" property="expiryDate" jdbcType="INTEGER" />
    <result column="producer" property="producer" jdbcType="VARCHAR" />
    <result column="goods_type_id" property="goodsTypeId" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="isdelete" property="isdelete" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, url, price, discount, create_date, expiry_date, producer, goods_type_id, 
    description, isdelete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.nik.po.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nik.po.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nik.po.Goods" >
    insert into goods (id, name, url, 
      price, discount, create_date, 
      expiry_date, producer, goods_type_id, 
      description, isdelete)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{discount,jdbcType=DOUBLE}, #{createDate,jdbcType=DATE}, 
      #{expiryDate,jdbcType=INTEGER}, #{producer,jdbcType=VARCHAR}, #{goodsTypeId,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{isdelete,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nik.po.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="expiryDate != null" >
        expiry_date,
      </if>
      <if test="producer != null" >
        producer,
      </if>
      <if test="goodsTypeId != null" >
        goods_type_id,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="isdelete != null" >
        isdelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="expiryDate != null" >
        #{expiryDate,jdbcType=INTEGER},
      </if>
      <if test="producer != null" >
        #{producer,jdbcType=VARCHAR},
      </if>
      <if test="goodsTypeId != null" >
        #{goodsTypeId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        #{isdelete,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nik.po.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=DOUBLE},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.expiryDate != null" >
        expiry_date = #{record.expiryDate,jdbcType=INTEGER},
      </if>
      <if test="record.producer != null" >
        producer = #{record.producer,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsTypeId != null" >
        goods_type_id = #{record.goodsTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.isdelete != null" >
        isdelete = #{record.isdelete,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      discount = #{record.discount,jdbcType=DOUBLE},
      create_date = #{record.createDate,jdbcType=DATE},
      expiry_date = #{record.expiryDate,jdbcType=INTEGER},
      producer = #{record.producer,jdbcType=VARCHAR},
      goods_type_id = #{record.goodsTypeId,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      isdelete = #{record.isdelete,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nik.po.Goods" >
    update goods
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="expiryDate != null" >
        expiry_date = #{expiryDate,jdbcType=INTEGER},
      </if>
      <if test="producer != null" >
        producer = #{producer,jdbcType=VARCHAR},
      </if>
      <if test="goodsTypeId != null" >
        goods_type_id = #{goodsTypeId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null" >
        isdelete = #{isdelete,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nik.po.Goods" >
    update goods
    set name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      discount = #{discount,jdbcType=DOUBLE},
      create_date = #{createDate,jdbcType=DATE},
      expiry_date = #{expiryDate,jdbcType=INTEGER},
      producer = #{producer,jdbcType=VARCHAR},
      goods_type_id = #{goodsTypeId,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      isdelete = #{isdelete,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>